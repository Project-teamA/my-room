FurnitureGrid.csの説明(2017年12月27日 更新)

FurnitureGrid.csは家具グリッドの形状やプロパティを司るクラスファイルであり，MonoBehaviourを継承している．
このクラスは長くなることが予想されるため，FurnitureGridOne.cs，FurnitureGridBed.csというファイルに実装部分を一部分割している．

* 家具グリッド同士の衝突は．家具グリッド同士がぴったりくっついたときにも発生するため，グリッド間の長さは基準値よりわずかに縮尺した値にしている
* 回転の中心(間取りグリッドに合わせる点)については現在変更予定はない．

----------------------------------------------------------------------------------------------------------------------------------------------------

アクセス可能な列挙型，構造体の紹介

enum ObjectType { NotPlaced, CanPlaced, Rugs, WallMounted, Door, CeilingHook, Window  } = 家具グリッドのタイプ
  NotPlaced = この家具グリッドは別の家具グリッドに乗れない
  CanPlaced = この家具グリッドは別の家具グリッドに乗れる
  Rugs = この家具グリッドは敷物である
  CeilingHook = この家具グリッドは天井掛けである
  WallMounted = この家具グリッドは壁掛けである
  Door = この家具グリッドはドアである
  Window = この家具グリッドは窓である

enum QuadType { NotPut, CanPut } = (家具グリッドを分割してできる)長方形の上に家具グリッドを乗せれるかどうか
  NotPut = 長方形の上に別のオブジェクトを乗せれない
  CanPut = 長方形の上に別のオブジェクトを乗せれる



struct FiveElements
    {
        float wood; //木
        float fire; //火
        float earth; //土
        float metal; //金
        float water; //水
    }
  この家具が持っている五行の値(未使用)

struct YinYang
    {
        float yin; //陰
        float yang; //陽
    }
  この家具が持っている陰陽の値(未使用)


struct ColorType
    {

    }
  この家具が持っている色の属性(未使用)

enum FurnitureType { Bed, Desk } = 家具タイプ(現在Bed=ベッド，Desk = 机のみだが今後増える)

----------------------------------------------------------------------------------------------------------------------------------------------------


アクセス可能なフィールド(メンバ変数)の紹介 

* 各フィールドにアクセスするときはアクセス用のメソッド(関数)があるため, それを利用すること
  例  aaa_というフィールドにアクセスしたいときは○○.aaa_ではなく○○.aaa()と記述する

int furniture_ID_ = 家具グリッドのID(家具グリッドの種類を識別するための数字) 現在0, 1, 2の3つの家具グリッドがある．
FurnitureType furniture_type_ = 家具の種類(ベッド，机など)
float[] parameta_ = 評価関数に使う用パラメータ(家具の種類に応じて配列長，意味合いが異なる)
  * Bedの場合，配列長は2でありparameta_[0] = 横のグリッド数(半分)，parameta_[1] = 縦のグリッド数(半分)

GameObject furniture_grid_ = 家具グリッド親オブジェクト
Vector3 grid_position_ = グリッド(中心)の3次元位置(ただしz値は反映されない)
* z値を反映させた中心が欲しい場合，親オブジェクトのtransform.positionを参照する．

Vector3[] vertices_all_ = 家具グリッド多角形の頂点(名前変わりました)
* vertices_all_で得られる頂点は初期位置から変化しない．ワールド座標での頂点の位置を得たい場合
  まず親オブジェクトのtransform.rotationを左から掛けて，親オブジェクトのtransform.positionを加算する．
* vertices(int index)で配列番号を指定して取得できる


float height_ = 家具の高さ(現在はALL0)
Vector3 up_direction_ = 上向きの方向(回転で向き変化)
Vector3 right_direction_ = 右向きの方向(回転で向き変化)
FiveElements five_elements_ = 五行情報
YinYang yin_yang_ = 陰陽情報
Color furniture_color_ = 色属性
* このままの名前では取得できない. furniture_color()でRGB形式で，furniture_color_HSV(out float h, out float s, out float v)でHSV形式で取得可能

ColorType color_type_ = この家具が持っている色の属性


----------------------------------------------------------------------------------------------------------------------------------------------------

GameObject furniture_grid_について

furniture_grid_から以下のものが取得できる(他にも取得できるものがあるが実用的ではないため割愛)．

オブジェクトの名前------[GameObjectクラス名].nameで取得可能
家具グリッド用のタグ(全てfurniture_gridというタグ名がついている)------[GameObjectクラス名].tagで取得可能
z値が考慮された家具グリッドの中心の位置------[GameObjectクラス名].transform.positionで取得可能
家具グリッドが初期値からどれくらい回転しているか(Vector3に掛け算して使う)------[GameObjectクラス名].transform.rotation
家具グリッドの色------[GameObjectクラス名].<MeshRenderer>().material.colorでRGB形式で取得可能


なお家具オブジェクトにはGridError.csがアタッチされており，他の家具グリッドと衝突すると色が赤に変化する．


----------------------------------------------------------------------------------------------------------------------------------------------------




アクセス可能なメソッド(関数)の紹介

void Init (int grid_ID, string object_name)
grid_IDを基に，各フィールドが初期化される(値が代入される)
-------------------------------------------
引数int grid_ID = つくりたい家具グリッドのID(現在1~9まで)
引数string object_name = 家具グリッドオブジェクトfurniture_grid_のオブジェクトネーム


---------------------------------------------------------------------------------------


void Translate(Vector3 new_position)
家具オブジェクトを移動させる
-------------------------------------------
引数Vector3 new_position = その位置に家具オブジェクトの中心がくるように家具オブジェクトが移動する


---------------------------------------------------------------------------------------


void Rotate()
家具オブジェクトが90°反時計回りに回転する