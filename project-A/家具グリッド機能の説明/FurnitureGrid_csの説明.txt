FurnitureGrid.csの説明(2017年12月12日 更新)

FurnitureGrid.csは家具グリッドの形状やプロパティを司るクラスファイルであり，MonoBehaviourを継承している．
* 家具グリッド同士の衝突は．家具グリッド同士がぴったりくっついたときにも発生するため，グリッド間の長さは基準値よりわずかに縮尺した値にしている
* 今後，家具グリッドはいくつかのPlaneオブジェクトを子オブジェクトにして実装するつもりである．
* 回転の中心(間取りグリッドに合わせる点)については現在変更予定はない．

----------------------------------------------------------------------------------------------------------------------------------------------------

アクセス可能な列挙型の紹介

enum ObjectType { NotPlaced, CanPlaced } = この家具グリッドが別の家具グリッドの上に乗れるかどうか
  NotPlaced = この家具グリッドは別の家具グリッドに乗れない
  CanPlaced = この家具グリッドは別の家具グリッドに乗れる

enum QuadType { NotPut, CanPut } = (家具グリッドを分割してできる)長方形の上に家具グリッドを乗せれるかどうか
  NotPut = 長方形の上に別のオブジェクトを乗せれない
  CanPut = 長方形の上に別のオブジェクトを乗せれる

----------------------------------------------------------------------------------------------------------------------------------------------------

アクセス可能なフィールド(メンバ変数)の紹介 

* 各フィールドにアクセスするときはアクセス用のメソッド(関数)があるため, それを利用すること
  例  aaa_というフィールドにアクセスしたいときは○○.aaa_ではなく○○.aaa()と記述する

int furniture_ID_ = 家具グリッドのID(家具グリッドの種類を識別するための数字) 現在0, 1, 2の3つの家具グリッドがある．
int horizontal__ = 横のグリッドの最大数
int vertical_ = 縦のグリッドの最大数
GameObject furniture_grid_ = 家具グリッド親オブジェクト
Vector3 grid_position_ = グリッド(中心)の3次元位置(ただしz値は反映されない)
* z値を反映させた中心が欲しい場合，親オブジェクトのtransform.positionを参照する．

Vector3[] vertices_all_ = 家具グリッド多角形の頂点(名前変わりました)
* vertices_all_で得られる頂点は初期位置から変化しない．ワールド座標での頂点の位置を得たい場合
  まず親オブジェクトのtransform.rotationを左から掛けて，親オブジェクトのtransform.positionを加算する．

float height_ = 家具の高さ(現在はALL0)

----------------------------------------------------------------------------------------------------------------------------------------------------

GameObject furniture_grid_について

furniture_grid_から以下のものが取得できる(他にも取得できるものがあるが実用的ではないため割愛)．

オブジェクトの名前------[GameObjectクラス名].nameで取得可能
家具グリッド用のタグ(全てfurniture_gridというタグ名がついている)------[GameObjectクラス名].tagで取得可能
z値が考慮された家具グリッドの中心の位置------[GameObjectクラス名].transform.positionで取得可能
家具グリッドが初期値からどれくらい回転しているか(Vector3に掛け算して使う)------[GameObjectクラス名].transform.rotation
家具グリッドの色------[GameObjectクラス名].<MeshRenderer>().material.colorでRGB形式で取得可能


なお家具オブジェクトにはGridError.csがアタッチされており，他の家具グリッドと衝突すると色が赤に変化する．


----------------------------------------------------------------------------------------------------------------------------------------------------




アクセス可能なメソッド(関数)の紹介

void Init (int grid_ID, string object_name)
grid_IDを基に，各フィールドが初期化される(値が代入される)
-------------------------------------------
引数int grid_ID = つくりたい家具グリッドのID
引数string object_name = 家具グリッドオブジェクトfurniture_grid_のオブジェクトネーム


---------------------------------------------------------------------------------------


void Translate(Vector3 new_position)
家具オブジェクトを移動させる
-------------------------------------------
引数Vector3 new_position = その位置に家具オブジェクトの中心がくるように家具オブジェクトが移動する


---------------------------------------------------------------------------------------


void Rotate()
家具オブジェクトが90°反時計回りに回転する